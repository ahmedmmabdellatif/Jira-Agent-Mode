name: Forge CI/CD (self-healing)

on:
  push:
    branches: [ main ]
  workflow_dispatch:

concurrency:
  group: forge-cicd-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: write

jobs:
  deploy-install:
    runs-on: ubuntu-latest
    timeout-minutes: 40
    env:
      FORGE_EMAIL: ${{ secrets.FORGE_EMAIL }}
      FORGE_API_TOKEN: ${{ secrets.FORGE_API_TOKEN }}
      ATLASSIAN_SITE: ${{ secrets.ATLASSIAN_SITE }} # e.g. jiraagentmode.atlassian.net
      SITE_URL: https://${{ secrets.ATLASSIAN_SITE }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Node.js (LTS)
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Forge CLI
        run: npm install -g @forge/cli@latest

      - name: Disable Forge CLI analytics (avoid non-TTY prompts)
        run: forge settings set usage-analytics false

      # Self-heal manifest (ensure id + runtime) and commit if needed
      - name: Ensure app.id and runtime in manifest
        working-directory: app
        shell: bash
        run: |
          set -euo pipefail
          test -f manifest.yml

          if ! grep -qE '^\s*id:\s*ari:cloud:ecosystem::app/' manifest.yml; then
            echo "No app.id -> running 'forge register \"Jira Agent Mode\"'..."
            forge register "Jira Agent Mode"
          fi

          if ! grep -qE '^\s*runtime:\s*$' manifest.yml; then
            : # nothing
          fi
          if ! grep -qE '^\s*runtime:\s*\n\s*name:\s*nodejs(20|22)\.x' manifest.yml; then
            awk '
              { print }
              END{
                print ""
                print "app:"
                print "  runtime:"
                print "    name: nodejs20.x"
              }
            ' manifest.yml > manifest.tmp && mv manifest.tmp manifest.yml
          fi

          # Drop deprecated app.name if present
          perl -0777 -pe 's/\napp:\n(\s*name:.*\n)/\napp:\n/s' -i manifest.yml || true

          if ! git diff --quiet; then
            git config user.name "github-actions[bot]"
            git config user.email "github-actions[bot]@users.noreply.github.com"
            git add manifest.yml
            git commit -m "ci: ensure Forge app.id and runtime"
            git push
          fi

      - name: Install dependencies (app)
        working-directory: app
        run: |
          if [ -f package-lock.json ]; then npm ci;
          elif [ -f package.json ]; then npm i;
          else echo "No package.json in /app"; fi

      - name: Lint (non-blocking)
        working-directory: app
        run: forge lint || echo "lint warnings, continuing"

      - name: Deploy to development
        working-directory: app
        run: forge deploy --environment development

      # Confluence: install-or-upgrade
      - name: Install on Confluence (development)
        working-directory: app
        shell: bash
        run: |
          set -e
          forge install \
            --product Confluence \
            --site "$SITE_URL" \
            --environment development \
            --confirm-scopes \
            --non-interactive \
          || forge install \
            --product Confluence \
            --site "$SITE_URL" \
            --environment development \
            --upgrade \
            --confirm-scopes \
            --non-interactive

      # Jira: install-or-upgrade (donâ€™t force --upgrade first)
      - name: Install on Jira (development)
        working-directory: app
        shell: bash
        run: |
          set -e
          forge install \
            --product Jira \
            --site "$SITE_URL" \
            --environment development \
            --confirm-scopes \
            --non-interactive \
          || forge install \
            --product Jira \
            --site "$SITE_URL" \
            --environment development \
            --upgrade \
            --confirm-scopes \
            --non-interactive
